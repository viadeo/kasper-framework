// ============================================================================
//                 KASPER - Kasper is the treasure keeper
//    www.viadeo.com - mobile.viadeo.com - api.viadeo.com - dev.viadeo.com
//            Viadeo Framework for effective CQRS/DDD architecture
// ============================================================================

allprojects  {
  apply plugin: 'maven'
  apply plugin: 'eclipse'
  apply plugin: 'cobertura'

  group = 'com.viadeo.kasper'
  version = '0.0.6-SNAPSHOT'

  // Remote Maven repositories ---------
  repositories {

    maven { url "http://nexus.mvn.viadeo.com/content/groups/public"
        credentials.username nexus_username
        credentials.password nexus_password
    }

    maven { url "http://nexus.mvn.viadeo.com/content/groups/public-snapshots"
        credentials.username nexus_username
        credentials.password nexus_password
    }

    maven { url "http://nexus.mvn.viadeo.com/content/repositories/snapshots"
        credentials.username nexus_username
        credentials.password nexus_password
    }

    maven { url "http://nexus.mvn.viadeo.com/content/repositories/releases"
        credentials.username nexus_username
        credentials.password nexus_password
    }

    mavenCentral()

    // Currently deleted, see http://issues.gradle.org/browse/GRADLE-2034
    // Refer to epantera or ldiasdasilva for questions
    // mavenLocal()
  }

  cobertura {
     coverageFormats = ['xml']
     rootProject.subprojects.each {
         coverageDirs << file("${it.name}/build/classes/main")
     }
  }

}

subprojects {
  apply plugin: 'java'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  configurations {
      all*.exclude module: 'slf4j-log4j12'
      deployerJars
  }

  // Use UTF-8 for reading xml (and other) data tests files
  tasks.withType(Test) { systemProperty "file.encoding", "UTF-8"  }
  tasks.withType(Compile) { options.encoding = "UTF-8" }

  // Maven repositories deployment configuration ------------------------------
  uploadArchives {
      repositories.mavenDeployer {
          configuration = configurations.deployerJars
          repository(url: "http://deploy.mvn.viadeo.com/content/repositories/kasper-releases") {
              authentication(userName: nexus_username, password: nexus_password)
          }
          snapshotRepository(url: "http://deploy.mvn.viadeo.com/content/repositories/kasper-snapshots") {
              authentication(userName: nexus_username, password: nexus_password)
          }
      }
  }

  // Dependency management -----------------------------------------------------
  ext.libraries = [

      // Third party dependencies ----------------------------------------------
      JACKSON_DATABIND      : 'com.fasterxml.jackson.core:jackson-databind:2.1.4',
      JACKSON_ANNOTATIONS   : 'com.fasterxml.jackson.core:jackson-annotations:2.1.4',
      JACKSON_CORE          : 'com.fasterxml.jackson.core:jackson-core:2.1.4',
      JACKSON_JSON          : 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.1.2',
      JACKSON_GUAVA_TYPES   : 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.1.2',
      
      JERSEY_SERVER         : 'com.sun.jersey:jersey-server:1.16',
      JERSEY_CLIENT         : 'com.sun.jersey:jersey-client:1.16',
      JERSEY_CORE           : 'com.sun.jersey:jersey-core:1.16',
      JERSEY_SERVLET        : 'com.sun.jersey:jersey-servlet:1.16',
      JERSEY_TEST_CORE      : 'com.sun.jersey.jersey-test-framework:jersey-test-framework-core:1.16',
      JERSEY_TEST_HTTP      : 'com.sun.jersey.jersey-test-framework:jersey-test-framework-http:1.16',
      
      PARANAMER             : 'com.thoughtworks.paranamer:paranamer:2.5.2',
      REFLECTIONS           : 'org.reflections:reflections:0.9.8',
      MYSQL                 : 'mysql:mysql-connector-java:5.1.24',
      COMMONS_DBCP          : 'commons-dbcp:commons-dbcp:1.4',
      JSON                  : 'org.json:json:20090211',
      DIFFUTILS             : 'com.googlecode.java-diff-utils:diffutils:1.2.1',
      SERVLET               : 'javax.servlet:javax.servlet-api:3.0.1',

      SPRING_CORE           : 'org.springframework:spring-core:3.1.4.RELEASE',
      SPRING_CONTEXT        : 'org.springframework:spring-context:3.1.4.RELEASE',
      SPRING_WEB            : 'org.springframework:spring-web:3.1.4.RELEASE',

      DROPWIZARD_CORE       : 'com.yammer.dropwizard:dropwizard-core:0.6.2',

      AXON_TEST             : 'org.axonframework:axon-test:2.0',
      AXON_CORE             : 'org.axonframework:axon-core:2.0',
      AXON_MONGO            : 'org.axonframework:axon-mongo:2.0',

      SLF4J                 : 'org.slf4j:slf4j-api:1.7.1',
      HAMCREST              : 'org.hamcrest:hamcrest-all:1.3',
      JUNIT                 : 'junit:junit:4.10',
      MOCKITO               : 'org.mockito:mockito-all:1.9.5',
      JODA_TIME             : 'joda-time:joda-time:2.1',
      GUAVA                 : 'com.google.guava:guava:13.0.1'

  ] // see http://stackoverflow.com/questions/9547170/in-gradle-how-do-i-declare-common-dependencies-in-a-single-place
  
  dependencies {
    compile libraries.GUAVA
    compile libraries.JODA_TIME
    compile libraries.SLF4J

    testCompile libraries.JUNIT
    testCompile libraries.MOCKITO
    testCompile libraries.HAMCREST
  }

}

// Build dependencies ---------------------------------------------------------
buildscript {
    repositories {
        maven { url "http://nexus.mvn.viadeo.com/content/groups/public"
            credentials.username nexus_username
            credentials.password nexus_password
        }
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:1.1.2"
    }
}
   

