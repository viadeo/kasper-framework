infrastructure {
  rabbitmq {
    hosts = "localhost"
    hosts = ${?RABBITMQ_PORT_5672_TCP_ADDR}
    hosts = ${?DOCKER_IP}
    port = 5672
    username = guest
    password = guest
    virtualhost = /
    mgmt {
      hostname = "localhost"
      hostname = ${?RABBITMQ_PORT_15672_TCP_ADDR}
      hostname = ${?DOCKER_IP}
      port = 15672
    }
  }
}

runtime {
  eventbus.amqp {
    clusterName = default
    enableListeners = true
    prefetchCount = 10
    interceptor.retry.maxAttempts = 5
    requeue.thresholdInHours = 1
    retry.exponentialBackOff {
        initialInterval = 500
        multiplier = 10.0
        maxInterval = 10000
    }
    exchange {
      name = platform
      version = 2
    }
    queue {
      expires = 7 days
      messageTTL = 7 days
      deadLetterMaxLength = 100000
    }
  }

  http {
    port = 8080
    adminPort = 8081

    bindHost = "0.0.0.0"

    useForwardedHeaders = true
    lowResourcesMaxIdleTime = 10s
    acceptorThreadPriorityOffset = 0
    shutdownGracePeriod = 2s

    # activate Jetty JMX capabilities
    jmx.enabled = true

    # with 70 DB connections, we guess that two executor threads by DB thread should be acceptable
    maxThreads: 250

    # auto min threads = nb of acceptor threads * 2 (ready to handle requests)
    minThreads: auto

    # Max idle time before releasing the thread
    maxIdleTime: 30s

    # auto : nb of CPU cores - 1 (for the system)
    acceptorThreads: auto

    # we commit on some latency on heavy load
    acceptQueueSize: 25

    # maximum number of buffers to keep in memory, auto = nb of executor threads
    maxBufferCount: auto

    # request buffers
    requestBufferSize: 16KiB
    requestHeaderBufferSize: 6KiB

    # response buffers
    responseBufferSize: 48KiB
    responseHeaderBufferSize: 6KiB

    path {
      query = "/kasper/query/*"
      command = "/kasper/command/*"
      event = "/kasper/event/*"
    }
  }

  context {
    application.version : 1
    client.version : 1
  }
}


